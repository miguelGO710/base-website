{"ast":null,"code":"import _objectSpread from\"C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"label\",\"fromFontVariationSettings\",\"toFontVariationSettings\",\"containerRef\",\"radius\",\"falloff\",\"className\",\"onClick\",\"style\"];import{forwardRef,useMemo,useRef,useEffect}from\"react\";import{motion}from\"framer-motion\";import\"./VariableProximity.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function useAnimationFrame(callback){useEffect(()=>{let frameId;const loop=()=>{callback();frameId=requestAnimationFrame(loop);};frameId=requestAnimationFrame(loop);return()=>cancelAnimationFrame(frameId);},[callback]);}function useMousePositionRef(containerRef){const positionRef=useRef({x:0,y:0});useEffect(()=>{const updatePosition=(x,y)=>{if(containerRef!==null&&containerRef!==void 0&&containerRef.current){const rect=containerRef.current.getBoundingClientRect();positionRef.current={x:x-rect.left,y:y-rect.top};}else{positionRef.current={x,y};}};const handleMouseMove=ev=>updatePosition(ev.clientX,ev.clientY);const handleTouchMove=ev=>{const touch=ev.touches[0];updatePosition(touch.clientX,touch.clientY);};window.addEventListener(\"mousemove\",handleMouseMove);window.addEventListener(\"touchmove\",handleTouchMove);return()=>{window.removeEventListener(\"mousemove\",handleMouseMove);window.removeEventListener(\"touchmove\",handleTouchMove);};},[containerRef]);return positionRef;}const VariableProximity=/*#__PURE__*/forwardRef((props,ref)=>{const{label,fromFontVariationSettings,toFontVariationSettings,containerRef,radius=50,falloff=\"linear\",className=\"\",onClick,style}=props,restProps=_objectWithoutProperties(props,_excluded);const letterRefs=useRef([]);const interpolatedSettingsRef=useRef([]);const mousePositionRef=useMousePositionRef(containerRef);const lastPositionRef=useRef({x:null,y:null});const parsedSettings=useMemo(()=>{const parseSettings=settingsStr=>new Map(settingsStr.split(\",\").map(s=>s.trim()).map(s=>{const[name,value]=s.split(\" \");return[name.replace(/['\"]/g,\"\"),parseFloat(value)];}));const fromSettings=parseSettings(fromFontVariationSettings);const toSettings=parseSettings(toFontVariationSettings);return Array.from(fromSettings.entries()).map(_ref=>{var _toSettings$get;let[axis,fromValue]=_ref;return{axis,fromValue,toValue:(_toSettings$get=toSettings.get(axis))!==null&&_toSettings$get!==void 0?_toSettings$get:fromValue};});},[fromFontVariationSettings,toFontVariationSettings]);const calculateDistance=(x1,y1,x2,y2)=>Math.sqrt((x2-x1)**2+(y2-y1)**2);const calculateFalloff=distance=>{const norm=Math.min(Math.max(1-distance/radius,0),1);switch(falloff){case\"exponential\":return norm**2;case\"gaussian\":return Math.exp(-((distance/(radius/2))**2)/2);case\"linear\":default:return norm;}};useAnimationFrame(()=>{if(!(containerRef!==null&&containerRef!==void 0&&containerRef.current))return;const containerRect=containerRef.current.getBoundingClientRect();const{x,y}=mousePositionRef.current;if(lastPositionRef.current.x===x&&lastPositionRef.current.y===y){return;}lastPositionRef.current={x,y};letterRefs.current.forEach((letterRef,index)=>{if(!letterRef)return;const rect=letterRef.getBoundingClientRect();const letterCenterX=rect.left+rect.width/2-containerRect.left;const letterCenterY=rect.top+rect.height/2-containerRect.top;const distance=calculateDistance(mousePositionRef.current.x,mousePositionRef.current.y,letterCenterX,letterCenterY);if(distance>=radius){letterRef.style.fontVariationSettings=fromFontVariationSettings;return;}const falloffValue=calculateFalloff(distance);const newSettings=parsedSettings.map(_ref2=>{let{axis,fromValue,toValue}=_ref2;const interpolatedValue=fromValue+(toValue-fromValue)*falloffValue;return\"'\".concat(axis,\"' \").concat(interpolatedValue);}).join(\", \");interpolatedSettingsRef.current[index]=newSettings;letterRef.style.fontVariationSettings=newSettings;});});const words=label.split(\" \");let letterIndex=0;return/*#__PURE__*/_jsxs(\"span\",_objectSpread(_objectSpread({ref:ref,className:\"\".concat(className,\" variable-proximity\"),onClick:onClick,style:_objectSpread({display:\"inline\"},style)},restProps),{},{children:[words.map((word,wordIndex)=>/*#__PURE__*/_jsxs(\"span\",{style:{display:\"inline-block\",whiteSpace:\"nowrap\"},children:[word.split(\"\").map(letter=>{const currentLetterIndex=letterIndex++;return/*#__PURE__*/_jsx(motion.span,{ref:el=>{letterRefs.current[currentLetterIndex]=el;},style:{display:\"inline-block\",fontVariationSettings:interpolatedSettingsRef.current[currentLetterIndex]},\"aria-hidden\":\"true\",children:letter},currentLetterIndex);}),wordIndex<words.length-1&&/*#__PURE__*/_jsx(\"span\",{style:{display:\"inline-block\"},children:\"\\xA0\"})]},wordIndex)),/*#__PURE__*/_jsx(\"span\",{className:\"sr-only\",children:label})]}));});VariableProximity.displayName=\"VariableProximity\";export default VariableProximity;","map":{"version":3,"names":["forwardRef","useMemo","useRef","useEffect","motion","jsx","_jsx","jsxs","_jsxs","useAnimationFrame","callback","frameId","loop","requestAnimationFrame","cancelAnimationFrame","useMousePositionRef","containerRef","positionRef","x","y","updatePosition","current","rect","getBoundingClientRect","left","top","handleMouseMove","ev","clientX","clientY","handleTouchMove","touch","touches","window","addEventListener","removeEventListener","VariableProximity","props","ref","label","fromFontVariationSettings","toFontVariationSettings","radius","falloff","className","onClick","style","restProps","_objectWithoutProperties","_excluded","letterRefs","interpolatedSettingsRef","mousePositionRef","lastPositionRef","parsedSettings","parseSettings","settingsStr","Map","split","map","s","trim","name","value","replace","parseFloat","fromSettings","toSettings","Array","from","entries","_ref","_toSettings$get","axis","fromValue","toValue","get","calculateDistance","x1","y1","x2","y2","Math","sqrt","calculateFalloff","distance","norm","min","max","exp","containerRect","forEach","letterRef","index","letterCenterX","width","letterCenterY","height","fontVariationSettings","falloffValue","newSettings","_ref2","interpolatedValue","concat","join","words","letterIndex","_objectSpread","display","children","word","wordIndex","whiteSpace","letter","currentLetterIndex","span","el","length","displayName"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/src/VariableProximity.js"],"sourcesContent":["import { forwardRef, useMemo, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./VariableProximity.css\";\n\nfunction useAnimationFrame(callback) {\n  useEffect(() => {\n    let frameId;\n    const loop = () => {\n      callback();\n      frameId = requestAnimationFrame(loop);\n    };\n    frameId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frameId);\n  }, [callback]);\n}\n\nfunction useMousePositionRef(containerRef) {\n  const positionRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const updatePosition = (x, y) => {\n      if (containerRef?.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        positionRef.current = { x: x - rect.left, y: y - rect.top };\n      } else {\n        positionRef.current = { x, y };\n      }\n    };\n\n    const handleMouseMove = (ev) => updatePosition(ev.clientX, ev.clientY);\n    const handleTouchMove = (ev) => {\n      const touch = ev.touches[0];\n      updatePosition(touch.clientX, touch.clientY);\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"touchmove\", handleTouchMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, [containerRef]);\n\n  return positionRef;\n}\n\nconst VariableProximity = forwardRef((props, ref) => {\n  const {\n    label,\n    fromFontVariationSettings,\n    toFontVariationSettings,\n    containerRef,\n    radius = 50,\n    falloff = \"linear\",\n    className = \"\",\n    onClick,\n    style,\n    ...restProps\n  } = props;\n\n  const letterRefs = useRef([]);\n  const interpolatedSettingsRef = useRef([]);\n  const mousePositionRef = useMousePositionRef(containerRef);\n  const lastPositionRef = useRef({ x: null, y: null });\n\n  const parsedSettings = useMemo(() => {\n    const parseSettings = (settingsStr) =>\n      new Map(\n        settingsStr.split(\",\")\n          .map(s => s.trim())\n          .map(s => {\n            const [name, value] = s.split(\" \");\n            return [name.replace(/['\"]/g, \"\"), parseFloat(value)];\n          })\n      );\n\n    const fromSettings = parseSettings(fromFontVariationSettings);\n    const toSettings = parseSettings(toFontVariationSettings);\n\n    return Array.from(fromSettings.entries()).map(([axis, fromValue]) => ({\n      axis,\n      fromValue,\n      toValue: toSettings.get(axis) ?? fromValue,\n    }));\n  }, [fromFontVariationSettings, toFontVariationSettings]);\n\n  const calculateDistance = (x1, y1, x2, y2) =>\n    Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n  const calculateFalloff = (distance) => {\n    const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n    switch (falloff) {\n      case \"exponential\": return norm ** 2;\n      case \"gaussian\": return Math.exp(-((distance / (radius / 2)) ** 2) / 2);\n      case \"linear\":\n      default: return norm;\n    }\n  };\n\n  useAnimationFrame(() => {\n    if (!containerRef?.current) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const { x, y } = mousePositionRef.current;\n    if (lastPositionRef.current.x === x && lastPositionRef.current.y === y) {\n      return;\n    }\n    lastPositionRef.current = { x, y };\n\n    letterRefs.current.forEach((letterRef, index) => {\n      if (!letterRef) return;\n\n      const rect = letterRef.getBoundingClientRect();\n      const letterCenterX = rect.left + rect.width / 2 - containerRect.left;\n      const letterCenterY = rect.top + rect.height / 2 - containerRect.top;\n\n      const distance = calculateDistance(\n        mousePositionRef.current.x,\n        mousePositionRef.current.y,\n        letterCenterX,\n        letterCenterY\n      );\n\n      if (distance >= radius) {\n        letterRef.style.fontVariationSettings = fromFontVariationSettings;\n        return;\n      }\n\n      const falloffValue = calculateFalloff(distance);\n      const newSettings = parsedSettings\n        .map(({ axis, fromValue, toValue }) => {\n          const interpolatedValue = fromValue + (toValue - fromValue) * falloffValue;\n          return `'${axis}' ${interpolatedValue}`;\n        })\n        .join(\", \");\n\n      interpolatedSettingsRef.current[index] = newSettings;\n      letterRef.style.fontVariationSettings = newSettings;\n    });\n  });\n\n  const words = label.split(\" \");\n  let letterIndex = 0;\n\n  return (\n    <span\n      ref={ref}\n      className={`${className} variable-proximity`}\n      onClick={onClick}\n      style={{ display: \"inline\", ...style }}\n      {...restProps}\n    >\n      {words.map((word, wordIndex) => (\n        <span\n          key={wordIndex}\n          style={{ display: \"inline-block\", whiteSpace: \"nowrap\" }}\n        >\n          {word.split(\"\").map((letter) => {\n            const currentLetterIndex = letterIndex++;\n            return (\n              <motion.span\n                key={currentLetterIndex}\n                ref={(el) => { letterRefs.current[currentLetterIndex] = el; }}\n                style={{\n                  display: \"inline-block\",\n                  fontVariationSettings:\n                    interpolatedSettingsRef.current[currentLetterIndex],\n                }}\n                aria-hidden=\"true\"\n              >\n                {letter}\n              </motion.span>\n            );\n          })}\n          {wordIndex < words.length - 1 && (\n            <span style={{ display: \"inline-block\" }}>&nbsp;</span>\n          )}\n        </span>\n      ))}\n      <span className=\"sr-only\">{label}</span>\n    </span>\n  );\n});\n\nVariableProximity.displayName = \"VariableProximity\";\nexport default VariableProximity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}