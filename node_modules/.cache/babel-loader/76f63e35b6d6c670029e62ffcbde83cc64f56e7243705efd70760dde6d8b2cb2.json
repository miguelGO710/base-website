{"ast":null,"code":"import * as Vec3Func from './functions/Vec3Func.js';\nexport class Vec3 extends Array {\n  constructor(x = 0, y = x, z = x) {\n    super(x, y, z);\n    return this;\n  }\n  get x() {\n    return this[0];\n  }\n  get y() {\n    return this[1];\n  }\n  get z() {\n    return this[2];\n  }\n  set x(v) {\n    this[0] = v;\n  }\n  set y(v) {\n    this[1] = v;\n  }\n  set z(v) {\n    this[2] = v;\n  }\n  set(x, y = x, z = x) {\n    if (x.length) return this.copy(x);\n    Vec3Func.set(this, x, y, z);\n    return this;\n  }\n  copy(v) {\n    Vec3Func.copy(this, v);\n    return this;\n  }\n  add(va, vb) {\n    if (vb) Vec3Func.add(this, va, vb);else Vec3Func.add(this, this, va);\n    return this;\n  }\n  sub(va, vb) {\n    if (vb) Vec3Func.subtract(this, va, vb);else Vec3Func.subtract(this, this, va);\n    return this;\n  }\n  multiply(v) {\n    if (v.length) Vec3Func.multiply(this, this, v);else Vec3Func.scale(this, this, v);\n    return this;\n  }\n  divide(v) {\n    if (v.length) Vec3Func.divide(this, this, v);else Vec3Func.scale(this, this, 1 / v);\n    return this;\n  }\n  inverse(v = this) {\n    Vec3Func.inverse(this, v);\n    return this;\n  }\n\n  // Can't use 'length' as Array.prototype uses it\n  len() {\n    return Vec3Func.length(this);\n  }\n  distance(v) {\n    if (v) return Vec3Func.distance(this, v);else return Vec3Func.length(this);\n  }\n  squaredLen() {\n    return Vec3Func.squaredLength(this);\n  }\n  squaredDistance(v) {\n    if (v) return Vec3Func.squaredDistance(this, v);else return Vec3Func.squaredLength(this);\n  }\n  negate(v = this) {\n    Vec3Func.negate(this, v);\n    return this;\n  }\n  cross(va, vb) {\n    if (vb) Vec3Func.cross(this, va, vb);else Vec3Func.cross(this, this, va);\n    return this;\n  }\n  scale(v) {\n    Vec3Func.scale(this, this, v);\n    return this;\n  }\n  normalize() {\n    Vec3Func.normalize(this, this);\n    return this;\n  }\n  dot(v) {\n    return Vec3Func.dot(this, v);\n  }\n  equals(v) {\n    return Vec3Func.exactEquals(this, v);\n  }\n  applyMatrix3(mat3) {\n    Vec3Func.transformMat3(this, this, mat3);\n    return this;\n  }\n  applyMatrix4(mat4) {\n    Vec3Func.transformMat4(this, this, mat4);\n    return this;\n  }\n  scaleRotateMatrix4(mat4) {\n    Vec3Func.scaleRotateMat4(this, this, mat4);\n    return this;\n  }\n  applyQuaternion(q) {\n    Vec3Func.transformQuat(this, this, q);\n    return this;\n  }\n  angle(v) {\n    return Vec3Func.angle(this, v);\n  }\n  lerp(v, t) {\n    Vec3Func.lerp(this, this, v, t);\n    return this;\n  }\n  smoothLerp(v, decay, dt) {\n    Vec3Func.smoothLerp(this, this, v, decay, dt);\n    return this;\n  }\n  clone() {\n    return new Vec3(this[0], this[1], this[2]);\n  }\n  fromArray(a, o = 0) {\n    this[0] = a[o];\n    this[1] = a[o + 1];\n    this[2] = a[o + 2];\n    return this;\n  }\n  toArray(a = [], o = 0) {\n    a[o] = this[0];\n    a[o + 1] = this[1];\n    a[o + 2] = this[2];\n    return a;\n  }\n  transformDirection(mat4) {\n    const x = this[0];\n    const y = this[1];\n    const z = this[2];\n    this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n    this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n    this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n    return this.normalize();\n  }\n}","map":{"version":3,"names":["Vec3Func","Vec3","Array","constructor","x","y","z","v","set","length","copy","add","va","vb","sub","subtract","multiply","scale","divide","inverse","len","distance","squaredLen","squaredLength","squaredDistance","negate","cross","normalize","dot","equals","exactEquals","applyMatrix3","mat3","transformMat3","applyMatrix4","mat4","transformMat4","scaleRotateMatrix4","scaleRotateMat4","applyQuaternion","q","transformQuat","angle","lerp","t","smoothLerp","decay","dt","clone","fromArray","a","o","toArray","transformDirection"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/ogl/src/math/Vec3.js"],"sourcesContent":["import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec3Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    smoothLerp(v, decay, dt) {\n        Vec3Func.smoothLerp(this, this, v, decay, dt);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}