{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Utilizador\\\\Documents\\\\BASE_WEBSITE\\\\src\\\\VariableProximity.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { forwardRef, useMemo, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./VariableProximity.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction useAnimationFrame(callback) {\n  _s();\n  useEffect(() => {\n    let frameId;\n    const loop = () => {\n      callback();\n      frameId = requestAnimationFrame(loop);\n    };\n    frameId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frameId);\n  }, [callback]);\n}\n_s(useAnimationFrame, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nfunction useMousePositionRef(containerRef) {\n  _s2();\n  const positionRef = useRef({\n    x: 0,\n    y: 0\n  });\n  useEffect(() => {\n    const updatePosition = (x, y) => {\n      if (containerRef !== null && containerRef !== void 0 && containerRef.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        positionRef.current = {\n          x: x - rect.left,\n          y: y - rect.top\n        };\n      } else {\n        positionRef.current = {\n          x,\n          y\n        };\n      }\n    };\n    const handleMouseMove = ev => updatePosition(ev.clientX, ev.clientY);\n    const handleTouchMove = ev => {\n      const touch = ev.touches[0];\n      updatePosition(touch.clientX, touch.clientY);\n    };\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"touchmove\", handleTouchMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, [containerRef]);\n  return positionRef;\n}\n_s2(useMousePositionRef, \"wdm/GIdX7aVuOs+0pdbCxBOBD6o=\");\nconst VariableProximity = /*#__PURE__*/_s3(/*#__PURE__*/forwardRef(_c = _s3((props, ref) => {\n  _s3();\n  const {\n    label,\n    fromFontVariationSettings,\n    toFontVariationSettings,\n    containerRef,\n    radius = 50,\n    falloff = \"linear\",\n    className = \"\",\n    onClick,\n    style,\n    ...restProps\n  } = props;\n  const letterRefs = useRef([]);\n  const interpolatedSettingsRef = useRef([]);\n  const mousePositionRef = useMousePositionRef(containerRef);\n  const lastPositionRef = useRef({\n    x: null,\n    y: null\n  });\n  const parsedSettings = useMemo(() => {\n    const parseSettings = settingsStr => new Map(settingsStr.split(\",\").map(s => s.trim()).map(s => {\n      const [name, value] = s.split(\" \");\n      return [name.replace(/['\"]/g, \"\"), parseFloat(value)];\n    }));\n    const fromSettings = parseSettings(fromFontVariationSettings);\n    const toSettings = parseSettings(toFontVariationSettings);\n    return Array.from(fromSettings.entries()).map(([axis, fromValue]) => {\n      var _toSettings$get;\n      return {\n        axis,\n        fromValue,\n        toValue: (_toSettings$get = toSettings.get(axis)) !== null && _toSettings$get !== void 0 ? _toSettings$get : fromValue\n      };\n    });\n  }, [fromFontVariationSettings, toFontVariationSettings]);\n  const calculateDistance = (x1, y1, x2, y2) => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n  const calculateFalloff = distance => {\n    const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n    switch (falloff) {\n      case \"exponential\":\n        return norm ** 2;\n      case \"gaussian\":\n        return Math.exp(-((distance / (radius / 2)) ** 2) / 2);\n      case \"linear\":\n      default:\n        return norm;\n    }\n  };\n  useAnimationFrame(() => {\n    if (!(containerRef !== null && containerRef !== void 0 && containerRef.current)) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const {\n      x,\n      y\n    } = mousePositionRef.current;\n    if (lastPositionRef.current.x === x && lastPositionRef.current.y === y) {\n      return;\n    }\n    lastPositionRef.current = {\n      x,\n      y\n    };\n    letterRefs.current.forEach((letterRef, index) => {\n      if (!letterRef) return;\n      const rect = letterRef.getBoundingClientRect();\n      const letterCenterX = rect.left + rect.width / 2 - containerRect.left;\n      const letterCenterY = rect.top + rect.height / 2 - containerRect.top;\n      const distance = calculateDistance(mousePositionRef.current.x, mousePositionRef.current.y, letterCenterX, letterCenterY);\n      if (distance >= radius) {\n        letterRef.style.fontVariationSettings = fromFontVariationSettings;\n        return;\n      }\n      const falloffValue = calculateFalloff(distance);\n      const newSettings = parsedSettings.map(({\n        axis,\n        fromValue,\n        toValue\n      }) => {\n        const interpolatedValue = fromValue + (toValue - fromValue) * falloffValue;\n        return `'${axis}' ${interpolatedValue}`;\n      }).join(\", \");\n      interpolatedSettingsRef.current[index] = newSettings;\n      letterRef.style.fontVariationSettings = newSettings;\n    });\n  });\n  const words = label.split(\" \");\n  let letterIndex = 0;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: ref,\n    className: `${className} variable-proximity`,\n    onClick: onClick,\n    style: {\n      display: \"inline\",\n      ...style\n    },\n    ...restProps,\n    children: [words.map((word, wordIndex) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: \"inline-block\",\n        whiteSpace: \"nowrap\"\n      },\n      children: [word.split(\"\").map(letter => {\n        const currentLetterIndex = letterIndex++;\n        return /*#__PURE__*/_jsxDEV(motion.span, {\n          ref: el => {\n            letterRefs.current[currentLetterIndex] = el;\n          },\n          style: {\n            display: \"inline-block\",\n            fontVariationSettings: interpolatedSettingsRef.current[currentLetterIndex]\n          },\n          \"aria-hidden\": \"true\",\n          children: letter\n        }, currentLetterIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this);\n      }), wordIndex < words.length - 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          display: \"inline-block\"\n        },\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this)]\n    }, wordIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sr-only\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}, \"R9b7juS/CTMVlZjoTQnY1SI3nDI=\", false, function () {\n  return [useMousePositionRef, useAnimationFrame];\n})), \"R9b7juS/CTMVlZjoTQnY1SI3nDI=\", false, function () {\n  return [useMousePositionRef, useAnimationFrame];\n});\n_c2 = VariableProximity;\nVariableProximity.displayName = \"VariableProximity\";\nexport default VariableProximity;\nvar _c, _c2;\n$RefreshReg$(_c, \"VariableProximity$forwardRef\");\n$RefreshReg$(_c2, \"VariableProximity\");","map":{"version":3,"names":["forwardRef","useMemo","useRef","useEffect","motion","jsxDEV","_jsxDEV","useAnimationFrame","callback","_s","frameId","loop","requestAnimationFrame","cancelAnimationFrame","useMousePositionRef","containerRef","_s2","positionRef","x","y","updatePosition","current","rect","getBoundingClientRect","left","top","handleMouseMove","ev","clientX","clientY","handleTouchMove","touch","touches","window","addEventListener","removeEventListener","VariableProximity","_s3","_c","props","ref","label","fromFontVariationSettings","toFontVariationSettings","radius","falloff","className","onClick","style","restProps","letterRefs","interpolatedSettingsRef","mousePositionRef","lastPositionRef","parsedSettings","parseSettings","settingsStr","Map","split","map","s","trim","name","value","replace","parseFloat","fromSettings","toSettings","Array","from","entries","axis","fromValue","_toSettings$get","toValue","get","calculateDistance","x1","y1","x2","y2","Math","sqrt","calculateFalloff","distance","norm","min","max","exp","containerRect","forEach","letterRef","index","letterCenterX","width","letterCenterY","height","fontVariationSettings","falloffValue","newSettings","interpolatedValue","join","words","letterIndex","display","children","word","wordIndex","whiteSpace","letter","currentLetterIndex","span","el","fileName","_jsxFileName","lineNumber","columnNumber","length","_c2","displayName","$RefreshReg$"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/src/VariableProximity.js"],"sourcesContent":["import { forwardRef, useMemo, useRef, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./VariableProximity.css\";\n\nfunction useAnimationFrame(callback) {\n  useEffect(() => {\n    let frameId;\n    const loop = () => {\n      callback();\n      frameId = requestAnimationFrame(loop);\n    };\n    frameId = requestAnimationFrame(loop);\n    return () => cancelAnimationFrame(frameId);\n  }, [callback]);\n}\n\nfunction useMousePositionRef(containerRef) {\n  const positionRef = useRef({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const updatePosition = (x, y) => {\n      if (containerRef?.current) {\n        const rect = containerRef.current.getBoundingClientRect();\n        positionRef.current = { x: x - rect.left, y: y - rect.top };\n      } else {\n        positionRef.current = { x, y };\n      }\n    };\n\n    const handleMouseMove = (ev) => updatePosition(ev.clientX, ev.clientY);\n    const handleTouchMove = (ev) => {\n      const touch = ev.touches[0];\n      updatePosition(touch.clientX, touch.clientY);\n    };\n\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"touchmove\", handleTouchMove);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"touchmove\", handleTouchMove);\n    };\n  }, [containerRef]);\n\n  return positionRef;\n}\n\nconst VariableProximity = forwardRef((props, ref) => {\n  const {\n    label,\n    fromFontVariationSettings,\n    toFontVariationSettings,\n    containerRef,\n    radius = 50,\n    falloff = \"linear\",\n    className = \"\",\n    onClick,\n    style,\n    ...restProps\n  } = props;\n\n  const letterRefs = useRef([]);\n  const interpolatedSettingsRef = useRef([]);\n  const mousePositionRef = useMousePositionRef(containerRef);\n  const lastPositionRef = useRef({ x: null, y: null });\n\n  const parsedSettings = useMemo(() => {\n    const parseSettings = (settingsStr) =>\n      new Map(\n        settingsStr.split(\",\")\n          .map(s => s.trim())\n          .map(s => {\n            const [name, value] = s.split(\" \");\n            return [name.replace(/['\"]/g, \"\"), parseFloat(value)];\n          })\n      );\n\n    const fromSettings = parseSettings(fromFontVariationSettings);\n    const toSettings = parseSettings(toFontVariationSettings);\n\n    return Array.from(fromSettings.entries()).map(([axis, fromValue]) => ({\n      axis,\n      fromValue,\n      toValue: toSettings.get(axis) ?? fromValue,\n    }));\n  }, [fromFontVariationSettings, toFontVariationSettings]);\n\n  const calculateDistance = (x1, y1, x2, y2) =>\n    Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n  const calculateFalloff = (distance) => {\n    const norm = Math.min(Math.max(1 - distance / radius, 0), 1);\n    switch (falloff) {\n      case \"exponential\": return norm ** 2;\n      case \"gaussian\": return Math.exp(-((distance / (radius / 2)) ** 2) / 2);\n      case \"linear\":\n      default: return norm;\n    }\n  };\n\n  useAnimationFrame(() => {\n    if (!containerRef?.current) return;\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const { x, y } = mousePositionRef.current;\n    if (lastPositionRef.current.x === x && lastPositionRef.current.y === y) {\n      return;\n    }\n    lastPositionRef.current = { x, y };\n\n    letterRefs.current.forEach((letterRef, index) => {\n      if (!letterRef) return;\n\n      const rect = letterRef.getBoundingClientRect();\n      const letterCenterX = rect.left + rect.width / 2 - containerRect.left;\n      const letterCenterY = rect.top + rect.height / 2 - containerRect.top;\n\n      const distance = calculateDistance(\n        mousePositionRef.current.x,\n        mousePositionRef.current.y,\n        letterCenterX,\n        letterCenterY\n      );\n\n      if (distance >= radius) {\n        letterRef.style.fontVariationSettings = fromFontVariationSettings;\n        return;\n      }\n\n      const falloffValue = calculateFalloff(distance);\n      const newSettings = parsedSettings\n        .map(({ axis, fromValue, toValue }) => {\n          const interpolatedValue = fromValue + (toValue - fromValue) * falloffValue;\n          return `'${axis}' ${interpolatedValue}`;\n        })\n        .join(\", \");\n\n      interpolatedSettingsRef.current[index] = newSettings;\n      letterRef.style.fontVariationSettings = newSettings;\n    });\n  });\n\n  const words = label.split(\" \");\n  let letterIndex = 0;\n\n  return (\n    <span\n      ref={ref}\n      className={`${className} variable-proximity`}\n      onClick={onClick}\n      style={{ display: \"inline\", ...style }}\n      {...restProps}\n    >\n      {words.map((word, wordIndex) => (\n        <span\n          key={wordIndex}\n          style={{ display: \"inline-block\", whiteSpace: \"nowrap\" }}\n        >\n          {word.split(\"\").map((letter) => {\n            const currentLetterIndex = letterIndex++;\n            return (\n              <motion.span\n                key={currentLetterIndex}\n                ref={(el) => { letterRefs.current[currentLetterIndex] = el; }}\n                style={{\n                  display: \"inline-block\",\n                  fontVariationSettings:\n                    interpolatedSettingsRef.current[currentLetterIndex],\n                }}\n                aria-hidden=\"true\"\n              >\n                {letter}\n              </motion.span>\n            );\n          })}\n          {wordIndex < words.length - 1 && (\n            <span style={{ display: \"inline-block\" }}>&nbsp;</span>\n          )}\n        </span>\n      ))}\n      <span className=\"sr-only\">{label}</span>\n    </span>\n  );\n});\n\nVariableProximity.displayName = \"VariableProximity\";\nexport default VariableProximity;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}