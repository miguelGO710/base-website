{"ast":null,"code":"import { Mesh } from '../core/Mesh.js';\nimport { Program } from '../core/Program.js';\nimport { Geometry } from '../core/Geometry.js';\nimport { Color } from '../math/Color.js';\nexport class WireMesh extends Mesh {\n  constructor(gl, {\n    geometry,\n    wireColor = new Color(0, 0.75, 0.5),\n    ...meshProps\n  } = {}) {\n    const wireProgram = new Program(gl, {\n      vertex,\n      fragment,\n      uniforms: {\n        wireColor: {\n          value: wireColor\n        }\n      }\n    });\n    const positionArray = geometry.attributes.position.data;\n    const indices = [];\n    const hashSet = new Set();\n    function addUniqueIndices(idx) {\n      for (let i = 0; i < idx.length; i += 2) {\n        if (isUniqueEdgePosition(idx[i] * 3, idx[i + 1] * 3, positionArray, hashSet)) {\n          indices.push(idx[i], idx[i + 1]);\n        }\n      }\n    }\n    if (geometry.attributes.index) {\n      const idata = geometry.attributes.index.data;\n      for (let i = 0; i < idata.length; i += 3) {\n        // For every triangle, make three line pairs (start, end)\n        // prettier-ignore\n        addUniqueIndices([idata[i], idata[i + 1], idata[i + 1], idata[i + 2], idata[i + 2], idata[i]]);\n      }\n    } else {\n      const numVertices = Math.floor(positionArray.length / 3);\n      for (let i = 0; i < numVertices; i += 3) {\n        addUniqueIndices([i, i + 1, i + 1, i + 2, i + 2, i]);\n      }\n    }\n    const indicesTyped = indices.length > 65536 ? new Uint32Array(indices) : new Uint16Array(indices);\n    const wireGeometry = new Geometry(gl, {\n      position: {\n        ...geometry.attributes.position\n      },\n      index: {\n        data: indicesTyped\n      }\n    });\n    super(gl, {\n      ...meshProps,\n      mode: gl.LINES,\n      geometry: wireGeometry,\n      program: wireProgram\n    });\n  }\n}\n\n// from https://github.com/mrdoob/three.js/blob/0c26bb4bb8220126447c8373154ac045588441de/src/geometries/WireframeGeometry.js#L116\nfunction isUniqueEdgePosition(start, end, pos, hashSet) {\n  // prettier-ignore\n  const hash1 = [pos[start], pos[start + 1], pos[start + 2], pos[end], pos[end + 1], pos[end + 2]].join('#');\n\n  // coincident edge\n  // prettier-ignore\n  const hash2 = [pos[end], pos[end + 1], pos[end + 2], pos[start], pos[start + 1], pos[start + 2]].join('#');\n  const oldSize = hashSet.size;\n  hashSet.add(hash1);\n  hashSet.add(hash2);\n  return hashSet.size - oldSize === 2;\n}\nconst vertex = /* glsl */`\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\nconst fragment = /* glsl */`\nprecision highp float;\nuniform vec3 wireColor;\n\nvoid main() {    \n    gl_FragColor = vec4(wireColor, 1.0);\n}\n`;","map":{"version":3,"names":["Mesh","Program","Geometry","Color","WireMesh","constructor","gl","geometry","wireColor","meshProps","wireProgram","vertex","fragment","uniforms","value","positionArray","attributes","position","data","indices","hashSet","Set","addUniqueIndices","idx","i","length","isUniqueEdgePosition","push","index","idata","numVertices","Math","floor","indicesTyped","Uint32Array","Uint16Array","wireGeometry","mode","LINES","program","start","end","pos","hash1","join","hash2","oldSize","size","add"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/ogl/src/extras/WireMesh.js"],"sourcesContent":["import { Mesh } from '../core/Mesh.js';\nimport { Program } from '../core/Program.js';\nimport { Geometry } from '../core/Geometry.js';\nimport { Color } from '../math/Color.js';\n\nexport class WireMesh extends Mesh {\n    constructor(gl, { geometry, wireColor = new Color(0, 0.75, 0.5), ...meshProps } = {}) {\n        const wireProgram = new Program(gl, {\n            vertex,\n            fragment,\n            uniforms: { wireColor: { value: wireColor } },\n        });\n\n        const positionArray = geometry.attributes.position.data;\n        const indices = [];\n        const hashSet = new Set();\n\n        function addUniqueIndices(idx) {\n            for (let i = 0; i < idx.length; i += 2) {\n                if (isUniqueEdgePosition(idx[i] * 3, idx[i + 1] * 3, positionArray, hashSet)) {\n                    indices.push(idx[i], idx[i + 1]);\n                }\n            }\n        }\n\n        if (geometry.attributes.index) {\n            const idata = geometry.attributes.index.data;\n\n            for (let i = 0; i < idata.length; i += 3) {\n                // For every triangle, make three line pairs (start, end)\n                // prettier-ignore\n                addUniqueIndices([\n                    idata[i], idata[i + 1],\n                    idata[i + 1], idata[i + 2],\n                    idata[i + 2], idata[i]\n                ]);\n            }\n        } else {\n            const numVertices = Math.floor(positionArray.length / 3);\n\n            for (let i = 0; i < numVertices; i += 3) {\n                addUniqueIndices([i, i + 1, i + 1, i + 2, i + 2, i]);\n            }\n        }\n\n        const indicesTyped = indices.length > 65536 ? new Uint32Array(indices) : new Uint16Array(indices);\n        const wireGeometry = new Geometry(gl, {\n            position: { ...geometry.attributes.position },\n            index: { data: indicesTyped },\n        });\n\n        super(gl, { ...meshProps, mode: gl.LINES, geometry: wireGeometry, program: wireProgram });\n    }\n}\n\n// from https://github.com/mrdoob/three.js/blob/0c26bb4bb8220126447c8373154ac045588441de/src/geometries/WireframeGeometry.js#L116\nfunction isUniqueEdgePosition(start, end, pos, hashSet) {\n    // prettier-ignore\n    const hash1 = [\n        pos[start], pos[start + 1], pos[start + 2],\n        pos[end], pos[end + 1], pos[end + 2]\n    ].join('#');\n\n    // coincident edge\n    // prettier-ignore\n    const hash2 = [\n        pos[end], pos[end + 1], pos[end + 2],\n        pos[start], pos[start + 1], pos[start + 2]\n    ].join('#');\n\n    const oldSize = hashSet.size;\n    hashSet.add(hash1);\n    hashSet.add(hash2);\n    return hashSet.size - oldSize === 2;\n}\n\nconst vertex = /* glsl */ `\nattribute vec3 position;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\n\nvoid main() {    \n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n`;\n\nconst fragment = /* glsl */ `\nprecision highp float;\nuniform vec3 wireColor;\n\nvoid main() {    \n    gl_FragColor = vec4(wireColor, 1.0);\n}\n`;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}