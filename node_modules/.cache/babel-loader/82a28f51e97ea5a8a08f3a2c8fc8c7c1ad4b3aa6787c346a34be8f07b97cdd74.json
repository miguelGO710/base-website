{"ast":null,"code":"// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\nexport class Program {\n  constructor(gl, {\n    vertex,\n    fragment,\n    uniforms = {},\n    transparent = false,\n    cullFace = gl.BACK,\n    frontFace = gl.CCW,\n    depthTest = true,\n    depthWrite = true,\n    depthFunc = gl.LEQUAL\n  } = {}) {\n    if (!gl.canvas) console.error('gl not passed as first argument to Program');\n    this.gl = gl;\n    this.uniforms = uniforms;\n    this.id = ID++;\n    if (!vertex) console.warn('vertex shader not supplied');\n    if (!fragment) console.warn('fragment shader not supplied');\n\n    // Store program state\n    this.transparent = transparent;\n    this.cullFace = cullFace;\n    this.frontFace = frontFace;\n    this.depthTest = depthTest;\n    this.depthWrite = depthWrite;\n    this.depthFunc = depthFunc;\n    this.blendFunc = {};\n    this.blendEquation = {};\n    this.stencilFunc = {};\n    this.stencilOp = {};\n\n    // set default blendFunc if transparent flagged\n    if (this.transparent && !this.blendFunc.src) {\n      if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n    }\n\n    // Create empty shaders and attach to program\n    this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    this.program = gl.createProgram();\n    gl.attachShader(this.program, this.vertexShader);\n    gl.attachShader(this.program, this.fragmentShader);\n\n    // Compile shaders with source\n    this.setShaders({\n      vertex,\n      fragment\n    });\n  }\n  setShaders({\n    vertex,\n    fragment\n  }) {\n    if (vertex) {\n      // compile vertex shader and log errors\n      this.gl.shaderSource(this.vertexShader, vertex);\n      this.gl.compileShader(this.vertexShader);\n      if (this.gl.getShaderInfoLog(this.vertexShader) !== '') {\n        console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n      }\n    }\n    if (fragment) {\n      // compile fragment shader and log errors\n      this.gl.shaderSource(this.fragmentShader, fragment);\n      this.gl.compileShader(this.fragmentShader);\n      if (this.gl.getShaderInfoLog(this.fragmentShader) !== '') {\n        console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n      }\n    }\n\n    // compile program and log errors\n    this.gl.linkProgram(this.program);\n    if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n      return console.warn(this.gl.getProgramInfoLog(this.program));\n    }\n\n    // Get active uniform locations\n    this.uniformLocations = new Map();\n    let numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n    for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n      let uniform = this.gl.getActiveUniform(this.program, uIndex);\n      this.uniformLocations.set(uniform, this.gl.getUniformLocation(this.program, uniform.name));\n\n      // split uniforms' names to separate array and struct declarations\n      const split = uniform.name.match(/(\\w+)/g);\n      uniform.uniformName = split[0];\n      uniform.nameComponents = split.slice(1);\n    }\n\n    // Get active attribute locations\n    this.attributeLocations = new Map();\n    const locations = [];\n    const numAttribs = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n    for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n      const attribute = this.gl.getActiveAttrib(this.program, aIndex);\n      const location = this.gl.getAttribLocation(this.program, attribute.name);\n      // Ignore special built-in inputs. eg gl_VertexID, gl_InstanceID\n      if (location === -1) continue;\n      locations[location] = attribute.name;\n      this.attributeLocations.set(attribute, location);\n    }\n    this.attributeOrder = locations.join('');\n  }\n  setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n    this.blendFunc.src = src;\n    this.blendFunc.dst = dst;\n    this.blendFunc.srcAlpha = srcAlpha;\n    this.blendFunc.dstAlpha = dstAlpha;\n    if (src) this.transparent = true;\n  }\n  setBlendEquation(modeRGB, modeAlpha) {\n    this.blendEquation.modeRGB = modeRGB;\n    this.blendEquation.modeAlpha = modeAlpha;\n  }\n  setStencilFunc(func, ref, mask) {\n    this.stencilRef = ref;\n    this.stencilFunc.func = func;\n    this.stencilFunc.ref = ref;\n    this.stencilFunc.mask = mask;\n  }\n  setStencilOp(stencilFail, depthFail, depthPass) {\n    this.stencilOp.stencilFail = stencilFail;\n    this.stencilOp.depthFail = depthFail;\n    this.stencilOp.depthPass = depthPass;\n  }\n  applyState() {\n    if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n    if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);else this.gl.renderer.disable(this.gl.CULL_FACE);\n    if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);else this.gl.renderer.disable(this.gl.BLEND);\n    if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n    this.gl.renderer.setFrontFace(this.frontFace);\n    this.gl.renderer.setDepthMask(this.depthWrite);\n    this.gl.renderer.setDepthFunc(this.depthFunc);\n    if (this.blendFunc.src) this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n    this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    if (this.stencilFunc.func || this.stencilOp.stencilFail) this.gl.renderer.enable(this.gl.STENCIL_TEST);else this.gl.renderer.disable(this.gl.STENCIL_TEST);\n    this.gl.renderer.setStencilFunc(this.stencilFunc.func, this.stencilFunc.ref, this.stencilFunc.mask);\n    this.gl.renderer.setStencilOp(this.stencilOp.stencilFail, this.stencilOp.depthFail, this.stencilOp.depthPass);\n  }\n  use({\n    flipFaces = false\n  } = {}) {\n    let textureUnit = -1;\n    const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n    // Avoid gl call if program already in use\n    if (!programActive) {\n      this.gl.useProgram(this.program);\n      this.gl.renderer.state.currentProgram = this.id;\n    }\n\n    // Set only the active uniforms found in the shader\n    this.uniformLocations.forEach((location, activeUniform) => {\n      let uniform = this.uniforms[activeUniform.uniformName];\n      for (const component of activeUniform.nameComponents) {\n        if (!uniform) break;\n        if (component in uniform) {\n          uniform = uniform[component];\n        } else if (Array.isArray(uniform.value)) {\n          break;\n        } else {\n          uniform = undefined;\n          break;\n        }\n      }\n      if (!uniform) {\n        return warn(`Active uniform ${activeUniform.name} has not been supplied`);\n      }\n      if (uniform && uniform.value === undefined) {\n        return warn(`${activeUniform.name} uniform is missing a value parameter`);\n      }\n      if (uniform.value.texture) {\n        textureUnit = textureUnit + 1;\n\n        // Check if texture needs to be updated\n        uniform.value.update(textureUnit);\n        return setUniform(this.gl, activeUniform.type, location, textureUnit);\n      }\n\n      // For texture arrays, set uniform as an array of texture units instead of just one\n      if (uniform.value.length && uniform.value[0].texture) {\n        const textureUnits = [];\n        uniform.value.forEach(value => {\n          textureUnit = textureUnit + 1;\n          value.update(textureUnit);\n          textureUnits.push(textureUnit);\n        });\n        return setUniform(this.gl, activeUniform.type, location, textureUnits);\n      }\n      setUniform(this.gl, activeUniform.type, location, uniform.value);\n    });\n    this.applyState();\n    if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n  }\n  remove() {\n    this.gl.deleteProgram(this.program);\n  }\n}\nfunction setUniform(gl, type, location, value) {\n  value = value.length ? flatten(value) : value;\n  const setValue = gl.renderer.state.uniformLocations.get(location);\n\n  // Avoid redundant uniform commands\n  if (value.length) {\n    if (setValue === undefined || setValue.length !== value.length) {\n      // clone array to store as cache\n      gl.renderer.state.uniformLocations.set(location, value.slice(0));\n    } else {\n      if (arraysEqual(setValue, value)) return;\n\n      // Update cached array values\n      setValue.set ? setValue.set(value) : setArray(setValue, value);\n      gl.renderer.state.uniformLocations.set(location, setValue);\n    }\n  } else {\n    if (setValue === value) return;\n    gl.renderer.state.uniformLocations.set(location, value);\n  }\n  switch (type) {\n    case 5126:\n      return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value);\n    // FLOAT\n    case 35664:\n      return gl.uniform2fv(location, value);\n    // FLOAT_VEC2\n    case 35665:\n      return gl.uniform3fv(location, value);\n    // FLOAT_VEC3\n    case 35666:\n      return gl.uniform4fv(location, value);\n    // FLOAT_VEC4\n    case 35670: // BOOL\n    case 5124: // INT\n    case 35678: // SAMPLER_2D\n    case 36306: // U_SAMPLER_2D\n    case 35680: // SAMPLER_CUBE\n    case 36289:\n      // SAMPLER_2D_ARRAY\n      return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value);\n    // SAMPLER_CUBE\n    case 35671: // BOOL_VEC2\n    case 35667:\n      return gl.uniform2iv(location, value);\n    // INT_VEC2\n    case 35672: // BOOL_VEC3\n    case 35668:\n      return gl.uniform3iv(location, value);\n    // INT_VEC3\n    case 35673: // BOOL_VEC4\n    case 35669:\n      return gl.uniform4iv(location, value);\n    // INT_VEC4\n    case 35674:\n      return gl.uniformMatrix2fv(location, false, value);\n    // FLOAT_MAT2\n    case 35675:\n      return gl.uniformMatrix3fv(location, false, value);\n    // FLOAT_MAT3\n    case 35676:\n      return gl.uniformMatrix4fv(location, false, value);\n    // FLOAT_MAT4\n  }\n}\nfunction addLineNumbers(string) {\n  let lines = string.split('\\n');\n  for (let i = 0; i < lines.length; i++) {\n    lines[i] = i + 1 + ': ' + lines[i];\n  }\n  return lines.join('\\n');\n}\nfunction flatten(a) {\n  const arrayLen = a.length;\n  const valueLen = a[0].length;\n  if (valueLen === undefined) return a;\n  const length = arrayLen * valueLen;\n  let value = arrayCacheF32[length];\n  if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n  for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n  return value;\n}\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction setArray(a, b) {\n  for (let i = 0, l = a.length; i < l; i++) {\n    a[i] = b[i];\n  }\n}\nlet warnCount = 0;\nfunction warn(message) {\n  if (warnCount > 100) return;\n  console.warn(message);\n  warnCount++;\n  if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}","map":{"version":3,"names":["ID","arrayCacheF32","Program","constructor","gl","vertex","fragment","uniforms","transparent","cullFace","BACK","frontFace","CCW","depthTest","depthWrite","depthFunc","LEQUAL","canvas","console","error","id","warn","blendFunc","blendEquation","stencilFunc","stencilOp","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","setShaders","shaderSource","compileShader","getShaderInfoLog","addLineNumbers","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","Map","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","set","getUniformLocation","name","split","match","uniformName","nameComponents","slice","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","setBlendEquation","modeRGB","modeAlpha","setStencilFunc","func","ref","mask","stencilRef","setStencilOp","stencilFail","depthFail","depthPass","applyState","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","STENCIL_TEST","use","flipFaces","textureUnit","programActive","state","currentProgram","useProgram","forEach","activeUniform","component","Array","isArray","value","undefined","texture","update","setUniform","type","length","textureUnits","push","CW","remove","deleteProgram","flatten","setValue","get","arraysEqual","setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","i","a","arrayLen","valueLen","Float32Array","b","l","warnCount","message"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/ogl/src/core/Program.js"],"sourcesContent":["// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LEQUAL,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n        this.stencilFunc = {};\n        this.stencilOp = {}\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // Create empty shaders and attach to program\n        this.vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        this.fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, this.vertexShader);\n        gl.attachShader(this.program, this.fragmentShader);\n\n        // Compile shaders with source\n        this.setShaders({ vertex, fragment });\n    }\n\n    setShaders({ vertex, fragment }) {\n        if (vertex) {\n            // compile vertex shader and log errors\n            this.gl.shaderSource(this.vertexShader, vertex);\n            this.gl.compileShader(this.vertexShader);\n            if (this.gl.getShaderInfoLog(this.vertexShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n            }\n        }\n\n        if (fragment) {\n            // compile fragment shader and log errors\n            this.gl.shaderSource(this.fragmentShader, fragment);\n            this.gl.compileShader(this.fragmentShader);\n            if (this.gl.getShaderInfoLog(this.fragmentShader) !== '') {\n                console.warn(`${this.gl.getShaderInfoLog(this.fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n            }\n        }\n\n        // compile program and log errors\n        this.gl.linkProgram(this.program);\n        if (!this.gl.getProgramParameter(this.program, this.gl.LINK_STATUS)) {\n            return console.warn(this.gl.getProgramInfoLog(this.program));\n        }\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = this.gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, this.gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n            uniform.nameComponents = split.slice(1);\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = this.gl.getProgramParameter(this.program, this.gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = this.gl.getActiveAttrib(this.program, aIndex);\n            const location = this.gl.getAttribLocation(this.program, attribute.name);\n            // Ignore special built-in inputs. eg gl_VertexID, gl_InstanceID\n            if (location === -1) continue;\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    setStencilFunc(func, ref, mask) {\n        this.stencilRef = ref;\n        this.stencilFunc.func = func;\n        this.stencilFunc.ref = ref;\n        this.stencilFunc.mask = mask;\n    }\n\n    setStencilOp(stencilFail, depthFail, depthPass) {\n        this.stencilOp.stencilFail = stencilFail;\n        this.stencilOp.depthFail = depthFail;\n        this.stencilOp.depthPass = depthPass;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src) this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n\n        if(this.stencilFunc.func || this.stencilOp.stencilFail) this.gl.renderer.enable(this.gl.STENCIL_TEST)\n            else this.gl.renderer.disable(this.gl.STENCIL_TEST)\n\n        this.gl.renderer.setStencilFunc(this.stencilFunc.func, this.stencilFunc.ref, this.stencilFunc.mask)\n        this.gl.renderer.setStencilOp(this.stencilOp.stencilFail, this.stencilOp.depthFail, this.stencilOp.depthPass)\n\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.state.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.state.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let uniform = this.uniforms[activeUniform.uniformName];\n\n            for (const component of activeUniform.nameComponents) {\n                if (!uniform) break;\n\n                if (component in uniform) {\n                    uniform = uniform[component];\n                } else if (Array.isArray(uniform.value)) {\n                    break;\n                } else {\n                    uniform = undefined;\n                    break;\n                }\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${activeUniform.name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${activeUniform.name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 36306: // U_SAMPLER_2D\n        case 35680: // SAMPLER_CUBE\n        case 36289: // SAMPLER_2D_ARRAY\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}