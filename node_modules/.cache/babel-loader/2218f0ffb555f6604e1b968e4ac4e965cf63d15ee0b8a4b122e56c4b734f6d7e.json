{"ast":null,"code":"import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nconst prevPos = /* @__PURE__ */new Vec3();\nconst prevRot = /* @__PURE__ */new Quat();\nconst prevScl = /* @__PURE__ */new Vec3();\nconst nextPos = /* @__PURE__ */new Vec3();\nconst nextRot = /* @__PURE__ */new Quat();\nconst nextScl = /* @__PURE__ */new Vec3();\nexport class Animation {\n  constructor({\n    objects,\n    data\n  }) {\n    this.objects = objects;\n    this.data = data;\n    this.elapsed = 0;\n    this.weight = 1;\n    this.duration = data.frames.length - 1;\n  }\n  update(totalWeight = 1, isSet) {\n    const weight = isSet ? 1 : this.weight / totalWeight;\n    const elapsed = this.elapsed % this.duration;\n    const floorFrame = Math.floor(elapsed);\n    const blend = elapsed - floorFrame;\n    const prevKey = this.data.frames[floorFrame];\n    const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n    this.objects.forEach((object, i) => {\n      prevPos.fromArray(prevKey.position, i * 3);\n      prevRot.fromArray(prevKey.quaternion, i * 4);\n      prevScl.fromArray(prevKey.scale, i * 3);\n      nextPos.fromArray(nextKey.position, i * 3);\n      nextRot.fromArray(nextKey.quaternion, i * 4);\n      nextScl.fromArray(nextKey.scale, i * 3);\n      prevPos.lerp(nextPos, blend);\n      prevRot.slerp(nextRot, blend);\n      prevScl.lerp(nextScl, blend);\n      object.position.lerp(prevPos, weight);\n      object.quaternion.slerp(prevRot, weight);\n      object.scale.lerp(prevScl, weight);\n    });\n  }\n}","map":{"version":3,"names":["Vec3","Quat","prevPos","prevRot","prevScl","nextPos","nextRot","nextScl","Animation","constructor","objects","data","elapsed","weight","duration","frames","length","update","totalWeight","isSet","floorFrame","Math","floor","blend","prevKey","nextKey","forEach","object","i","fromArray","position","quaternion","scale","lerp","slerp"],"sources":["C:/Users/Utilizador/Documents/BASE_WEBSITE/node_modules/ogl/src/extras/Animation.js"],"sourcesContent":["import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\n\nconst prevPos = /* @__PURE__ */ new Vec3();\nconst prevRot = /* @__PURE__ */ new Quat();\nconst prevScl = /* @__PURE__ */ new Vec3();\n\nconst nextPos = /* @__PURE__ */ new Vec3();\nconst nextRot = /* @__PURE__ */ new Quat();\nconst nextScl = /* @__PURE__ */ new Vec3();\n\nexport class Animation {\n    constructor({ objects, data }) {\n        this.objects = objects;\n        this.data = data;\n        this.elapsed = 0;\n        this.weight = 1;\n        this.duration = data.frames.length - 1;\n    }\n\n    update(totalWeight = 1, isSet) {\n        const weight = isSet ? 1 : this.weight / totalWeight;\n        const elapsed = this.elapsed % this.duration;\n\n        const floorFrame = Math.floor(elapsed);\n        const blend = elapsed - floorFrame;\n        const prevKey = this.data.frames[floorFrame];\n        const nextKey = this.data.frames[(floorFrame + 1) % this.duration];\n\n        this.objects.forEach((object, i) => {\n            prevPos.fromArray(prevKey.position, i * 3);\n            prevRot.fromArray(prevKey.quaternion, i * 4);\n            prevScl.fromArray(prevKey.scale, i * 3);\n\n            nextPos.fromArray(nextKey.position, i * 3);\n            nextRot.fromArray(nextKey.quaternion, i * 4);\n            nextScl.fromArray(nextKey.scale, i * 3);\n\n            prevPos.lerp(nextPos, blend);\n            prevRot.slerp(nextRot, blend);\n            prevScl.lerp(nextScl, blend);\n\n            object.position.lerp(prevPos, weight);\n            object.quaternion.slerp(prevRot, weight);\n            object.scale.lerp(prevScl, weight);\n        });\n    }\n}\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,iBAAiB;AACtC,SAASC,IAAI,QAAQ,iBAAiB;AAEtC,MAAMC,OAAO,GAAG,eAAgB,IAAIF,IAAI,CAAC,CAAC;AAC1C,MAAMG,OAAO,GAAG,eAAgB,IAAIF,IAAI,CAAC,CAAC;AAC1C,MAAMG,OAAO,GAAG,eAAgB,IAAIJ,IAAI,CAAC,CAAC;AAE1C,MAAMK,OAAO,GAAG,eAAgB,IAAIL,IAAI,CAAC,CAAC;AAC1C,MAAMM,OAAO,GAAG,eAAgB,IAAIL,IAAI,CAAC,CAAC;AAC1C,MAAMM,OAAO,GAAG,eAAgB,IAAIP,IAAI,CAAC,CAAC;AAE1C,OAAO,MAAMQ,SAAS,CAAC;EACnBC,WAAWA,CAAC;IAAEC,OAAO;IAAEC;EAAK,CAAC,EAAE;IAC3B,IAAI,CAACD,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,MAAM,GAAG,CAAC;IACf,IAAI,CAACC,QAAQ,GAAGH,IAAI,CAACI,MAAM,CAACC,MAAM,GAAG,CAAC;EAC1C;EAEAC,MAAMA,CAACC,WAAW,GAAG,CAAC,EAAEC,KAAK,EAAE;IAC3B,MAAMN,MAAM,GAAGM,KAAK,GAAG,CAAC,GAAG,IAAI,CAACN,MAAM,GAAGK,WAAW;IACpD,MAAMN,OAAO,GAAG,IAAI,CAACA,OAAO,GAAG,IAAI,CAACE,QAAQ;IAE5C,MAAMM,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACV,OAAO,CAAC;IACtC,MAAMW,KAAK,GAAGX,OAAO,GAAGQ,UAAU;IAClC,MAAMI,OAAO,GAAG,IAAI,CAACb,IAAI,CAACI,MAAM,CAACK,UAAU,CAAC;IAC5C,MAAMK,OAAO,GAAG,IAAI,CAACd,IAAI,CAACI,MAAM,CAAC,CAACK,UAAU,GAAG,CAAC,IAAI,IAAI,CAACN,QAAQ,CAAC;IAElE,IAAI,CAACJ,OAAO,CAACgB,OAAO,CAAC,CAACC,MAAM,EAAEC,CAAC,KAAK;MAChC1B,OAAO,CAAC2B,SAAS,CAACL,OAAO,CAACM,QAAQ,EAAEF,CAAC,GAAG,CAAC,CAAC;MAC1CzB,OAAO,CAAC0B,SAAS,CAACL,OAAO,CAACO,UAAU,EAAEH,CAAC,GAAG,CAAC,CAAC;MAC5CxB,OAAO,CAACyB,SAAS,CAACL,OAAO,CAACQ,KAAK,EAAEJ,CAAC,GAAG,CAAC,CAAC;MAEvCvB,OAAO,CAACwB,SAAS,CAACJ,OAAO,CAACK,QAAQ,EAAEF,CAAC,GAAG,CAAC,CAAC;MAC1CtB,OAAO,CAACuB,SAAS,CAACJ,OAAO,CAACM,UAAU,EAAEH,CAAC,GAAG,CAAC,CAAC;MAC5CrB,OAAO,CAACsB,SAAS,CAACJ,OAAO,CAACO,KAAK,EAAEJ,CAAC,GAAG,CAAC,CAAC;MAEvC1B,OAAO,CAAC+B,IAAI,CAAC5B,OAAO,EAAEkB,KAAK,CAAC;MAC5BpB,OAAO,CAAC+B,KAAK,CAAC5B,OAAO,EAAEiB,KAAK,CAAC;MAC7BnB,OAAO,CAAC6B,IAAI,CAAC1B,OAAO,EAAEgB,KAAK,CAAC;MAE5BI,MAAM,CAACG,QAAQ,CAACG,IAAI,CAAC/B,OAAO,EAAEW,MAAM,CAAC;MACrCc,MAAM,CAACI,UAAU,CAACG,KAAK,CAAC/B,OAAO,EAAEU,MAAM,CAAC;MACxCc,MAAM,CAACK,KAAK,CAACC,IAAI,CAAC7B,OAAO,EAAES,MAAM,CAAC;IACtC,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}